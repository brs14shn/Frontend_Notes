import AddTutorial from '../components/AddTutorial';
import TutorialList from '../components/TutorialList';
import axios from 'axios';
import { useState, useEffect } from 'react';
import {toastSuccessNotify} from "../helper/ToastNotify"

const Home = () => {
  const [tutorials, setTutorials] = useState();

  const url = 'https://tutorials-api-cw.herokuapp.com/api/tutorials';

  //! verilerimizi Ã§aÄŸÄ±rÄ±yoruz.
  //! GET(READ)
  const getTutorials =async()=>{

    try {
      const response = await axios.get(url) // get iÅŸlemi sadece url alÄ±r.
      // const {data} = await axios.get(url) // gelen datayÄ± destructiring yaparÄ±z
      //console.log(response);
      setTutorials(response.data)
      
    } catch (error) {
      console.log(error);
      
    }
  }

  //getTutorials() //? state gÃ¼ncellenmediÄŸinden render iÅŸlemi tetiklenmez
  //getTutorials //! state gÃ¼ncelliÄŸinden render iÅŸleminin sÃ¼rekli olmasÄ±nÄ± engellemek iÃ§inðŸ‘‡

  useEffect(() => {
    //! ComponentDidMount --> Birkez Ã§alÄ±ÅŸacaktÄ±r.
    getTutorials()
  }, [])
  
console.log(tutorials) // ilk undefined gelir Ã§Ã¼nkÃ¼ ilk render iÅŸlemi tetiklenir.
//? Burada gelen tutorials artÄ±k TutorialList aktaracaÄŸÄ±z.

//* ðŸ’¥ AddTutorials.jsx gÃ¶nderilen veri backend gidecek ancak TutorList.jsx gÃ¼ncellenmeyecektir.

//!* ðŸ’¥ Bunu engellemk iÃ§in addtutorials fonksiyonu Home.js yazÄ±p props olarak AddTutorial.jsx  gÃ¶nderiririz.Bu da ÅŸunu saÄŸlÄ±yor addtutorials func sayesinde tutorial state gÃ¼ncelleyebiliriz. Ancak AAddTutorials.jsx yazarsak yukarÄ± veri taÅŸÄ±ma iÅŸlemi yapamayÄ±z.

//! POST (CREATE)
const addTutorial = async(tutorial)=>{
  try {
   const res = await axios.post(url,tutorial) 
   if(res.status===200){
    getTutorials()
    toastSuccessNotify("Tutorial added")
   }

  } catch (error) {
    console.log("error") 
  }
  
  }
  
  

  //getTutorials()


  return (
    <>
      <AddTutorial addTutorial = {addTutorial}/>
      <TutorialList tutorials={tutorials} />

      {/* <TutorialList {...tutorials} /> */}
    </>
  );
};

export default Home;
